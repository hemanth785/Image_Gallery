{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heman\\\\Documents\\\\Z_Hemanth\\\\Development\\\\gallery_app\\\\frontend\\\\src\\\\components\\\\Insert.js\";\nimport React from \"react\";\nimport './Insert.css';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { config } from \"./../App\";\nimport { Alert } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\n\nconst Insert = () => {\n  const onFinish = async values => {\n    const {\n      ImgName,\n      ImgURL,\n      ImgDetails\n    } = values;\n    const rawResponse = await fetch(`${config.endpoint}/images/new`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ImgName,\n        ImgURL,\n        ImgDetails\n      })\n    });\n    const content = await rawResponse.json();\n\n    if (content.status == 'success') {\n      /*#__PURE__*/\n      _jsxDEV(Alert, {\n        message: \"Successfully added new image to gallery\",\n        type: \"success\",\n        showIcon: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this);\n    } else {\n      /*#__PURE__*/\n      _jsxDEV(Alert, {\n        message: \"Error in inserting new image, please try again!\",\n        type: \"success\",\n        showIcon: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this);\n    }\n\n    console.log(content);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"form-header\",\n      children: \"Add new Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      name: \"basic\",\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 18\n      },\n      initialValues: {\n        remember: true\n      },\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Image name\",\n        name: \"ImgName\",\n        rules: [{\n          required: true,\n          message: 'Please input image name!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Image URL\",\n        name: \"ImgURL\",\n        rules: [{\n          required: true,\n          message: 'Please input image url!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Image Detail\",\n        name: \"ImgDetails\",\n        rules: [{\n          required: true,\n          message: 'Please input image detail!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(TextArea, {\n          row: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          offset: 0,\n          span: 24\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Insert;\nexport default Insert;\n\nvar _c;\n\n$RefreshReg$(_c, \"Insert\");","map":{"version":3,"sources":["C:/Users/heman/Documents/Z_Hemanth/Development/gallery_app/frontend/src/components/Insert.js"],"names":["React","Form","Input","Button","Checkbox","config","Alert","TextArea","Insert","onFinish","values","ImgName","ImgURL","ImgDetails","rawResponse","fetch","endpoint","method","headers","body","JSON","stringify","content","json","status","console","log","onFinishFailed","errorInfo","span","remember","required","message","offset"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport './Insert.css';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { config } from \"./../App\";\r\nimport { Alert } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n  \r\nconst Insert = () => {\r\n    const onFinish = async (values) => {\r\n      const {ImgName,ImgURL,ImgDetails} =values;\r\n      const rawResponse = await fetch(`${config.endpoint}/images/new`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          ImgName,\r\n          ImgURL,\r\n          ImgDetails\r\n        })\r\n      });\r\n      const content = await rawResponse.json();\r\n      if(content.status == 'success'){\r\n        <Alert message=\"Successfully added new image to gallery\" type=\"success\" showIcon />\r\n      } else {\r\n        <Alert message=\"Error in inserting new image, please try again!\" type=\"success\" showIcon />\r\n      }\r\n      console.log(content)\r\n    };\r\n  \r\n    const onFinishFailed = (errorInfo) => {\r\n      console.log('Failed:', errorInfo);\r\n    };\r\n  \r\n    return (\r\n      <div className='form-container'>\r\n        <h2 className='form-header'>Add new Image</h2>\r\n          <Form\r\n            name=\"basic\"\r\n            labelCol={{\r\n              span: 6,\r\n            }}\r\n            wrapperCol={{\r\n              span: 18,\r\n            }}\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n\r\n            <Form.Item\r\n              label=\"Image name\"\r\n              name=\"ImgName\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input image name!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n      \r\n            <Form.Item\r\n              label=\"Image URL\"\r\n              name=\"ImgURL\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input image url!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Image Detail\"\r\n              name=\"ImgDetails\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input image detail!',\r\n                },\r\n              ]}\r\n            >\r\n              <TextArea row={4} />\r\n            </Form.Item>\r\n      \r\n            <Form.Item\r\n              wrapperCol={{\r\n                offset: 0,\r\n                span: 24,\r\n              }}\r\n            >\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default Insert;"]},"metadata":{},"sourceType":"module"}