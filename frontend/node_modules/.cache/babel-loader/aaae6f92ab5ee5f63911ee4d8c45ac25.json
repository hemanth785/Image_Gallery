{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heman\\\\Documents\\\\Z_Hemanth\\\\Development\\\\gallery_app\\\\frontend\\\\src\\\\components\\\\Gallery.js\";\nimport React, { useImperativeHandle } from \"react\";\nimport Image from \"./Image\";\nimport Header from \"./Header\";\nimport './Gallery.css';\nimport { Row } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport { config } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Gallery extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imagesList: []\n    };\n  }\n\n  async componentDidMount() {\n    let response = await fetch(`${config.endpoint}/images`);\n    response = await response.json();\n    this.setState({\n      imagesList: response.images\n    });\n    localStorage.setItem('imagesList', JSON.stringify(response.images));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"gallery-container\",\n        children: this.state.imagesList.map(image => /*#__PURE__*/_jsxDEV(Image, {\n          image: image\n        }, image._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Gallery);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/heman/Documents/Z_Hemanth/Development/gallery_app/frontend/src/components/Gallery.js"],"names":["React","useImperativeHandle","Image","Header","Row","withRouter","config","Gallery","Component","constructor","props","state","imagesList","componentDidMount","response","fetch","endpoint","json","setState","images","localStorage","setItem","JSON","stringify","render","map","image","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,mBAAhB,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,eAAP;AACA,SAAQC,GAAR,QAAkB,MAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AAEA,MAAMC,OAAN,SAAsBP,KAAK,CAACQ,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGD;;AAEsB,QAAjBC,iBAAiB,GAAG;AACxB,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,MAAM,CAACU,QAAS,SAApB,CAA1B;AACAF,IAAAA,QAAQ,GAAG,MAAMA,QAAQ,CAACG,IAAT,EAAjB;AACA,SAAKC,QAAL,CAAc;AACZN,MAAAA,UAAU,EAAEE,QAAQ,CAACK;AADT,KAAd;AAGAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAeT,QAAQ,CAACK,MAAxB,CAAnC;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA,8BACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADD,eAGC,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,kBACG,KAAKb,KAAL,CAAWC,UAAX,CAAsBa,GAAtB,CAA0BC,KAAK,iBAC5B,QAAC,KAAD;AAAuB,UAAA,KAAK,EAAEA;AAA9B,WAAYA,KAAK,CAACC,GAAlB;AAAA;AAAA;AAAA;AAAA,gBADH;AADH;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAUD;;AA5BmC;;AA+BtC,oBAAetB,UAAU,CAACE,OAAD,CAAzB","sourcesContent":["import React, { useImperativeHandle } from \"react\";\r\nimport Image from \"./Image\";\r\nimport Header from \"./Header\";\r\nimport './Gallery.css';\r\nimport {Row} from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { config } from \"../App\";\r\n  \r\nclass Gallery extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      imagesList: []\r\n    };\r\n  }\r\n  \r\n  async componentDidMount() {\r\n    let response = await fetch(`${config.endpoint}/images`);\r\n    response = await response.json();\r\n    this.setState({\r\n      imagesList: response.images\r\n    });\r\n    localStorage.setItem('imagesList', JSON.stringify(response.images))\r\n  }\r\n  \r\n  render() {\r\n    return <div>\r\n            <Header />\r\n\r\n            <Row className='gallery-container'>\r\n              {this.state.imagesList.map(image => (\r\n                  <Image key={image._id} image={image}/>\r\n              ))}\r\n              \r\n            </Row>\r\n          </div>\r\n  }\r\n}\r\n  \r\nexport default withRouter(Gallery);"]},"metadata":{},"sourceType":"module"}