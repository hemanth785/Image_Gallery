{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\heman\\\\Documents\\\\Z_Hemanth\\\\Development\\\\gallery_app\\\\frontend\\\\src\\\\components\\\\Insert.js\";\nimport React from \"react\";\nimport './Insert.css';\nimport Header from \"./Header\";\nimport { Form, Input, Button, message } from 'antd';\nimport { config } from \"./../App\";\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\n\nconst Insert = props => {\n  const onFinish = async values => {\n    const {\n      ImgName,\n      ImgURL,\n      ImgDetails\n    } = values;\n    const rawResponse = await fetch(`${config.endpoint}/images/new`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ImgName,\n        ImgURL,\n        ImgDetails\n      })\n    });\n    const content = await rawResponse.json();\n\n    if (content.status == 'success') {\n      message.success(\"Successfully added new image to gallery\");\n      setTimeout(function () {\n        props.history.push('/');\n      }, 1500);\n    } else {\n      message.success(\"Error in inserting new image, please try again!\");\n    }\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-header\",\n        children: \"Add new Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        name: \"basic\",\n        labelCol: {\n          span: 6\n        },\n        wrapperCol: {\n          span: 18\n        },\n        initialValues: {\n          remember: true\n        },\n        onFinish: onFinish,\n        onFinishFailed: onFinishFailed,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Image name\",\n          name: \"ImgName\",\n          rules: [{\n            required: true,\n            message: 'Please input image name!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Image URL\",\n          name: \"ImgURL\",\n          rules: [{\n            required: true,\n            message: 'Please input image url!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Image Detail\",\n          name: \"ImgDetails\",\n          rules: [{\n            required: true,\n            message: 'Please input image detail!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(TextArea, {\n            row: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: {\n            offset: 0,\n            span: 24\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Insert;\nexport default _c2 = withRouter(Insert);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Insert\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/heman/Documents/Z_Hemanth/Development/gallery_app/frontend/src/components/Insert.js"],"names":["React","Header","Form","Input","Button","message","config","withRouter","TextArea","Insert","props","onFinish","values","ImgName","ImgURL","ImgDetails","rawResponse","fetch","endpoint","method","headers","body","JSON","stringify","content","json","status","success","setTimeout","history","push","onFinishFailed","errorInfo","console","log","span","remember","required","offset"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport './Insert.css';\r\nimport Header from \"./Header\";\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { config } from \"./../App\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst { TextArea } = Input;\r\n  \r\nconst Insert = (props) => {\r\n    const onFinish = async (values) => {\r\n      const {ImgName,ImgURL,ImgDetails} =values;\r\n      const rawResponse = await fetch(`${config.endpoint}/images/new`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          ImgName,\r\n          ImgURL,\r\n          ImgDetails\r\n        })\r\n      });\r\n      const content = await rawResponse.json();\r\n      if(content.status == 'success'){\r\n        message.success(\"Successfully added new image to gallery\")\r\n        setTimeout(function(){\r\n          props.history.push('/')\r\n        },1500)\r\n      } else {\r\n        message.success(\"Error in inserting new image, please try again!\")\r\n      }\r\n    };\r\n  \r\n    const onFinishFailed = (errorInfo) => {\r\n      console.log('Failed:', errorInfo);\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <Header />\r\n        <div className='form-container'>\r\n          <h2 className='form-header'>Add new Image</h2>\r\n            <Form\r\n              name=\"basic\"\r\n              labelCol={{\r\n                span: 6,\r\n              }}\r\n              wrapperCol={{\r\n                span: 18,\r\n              }}\r\n              initialValues={{\r\n                remember: true,\r\n              }}\r\n              onFinish={onFinish}\r\n              onFinishFailed={onFinishFailed}\r\n            >\r\n\r\n              <Form.Item\r\n                label=\"Image name\"\r\n                name=\"ImgName\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input image name!',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n        \r\n              <Form.Item\r\n                label=\"Image URL\"\r\n                name=\"ImgURL\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input image url!',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Image Detail\"\r\n                name=\"ImgDetails\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input image detail!',\r\n                  },\r\n                ]}\r\n              >\r\n                <TextArea row={4} />\r\n              </Form.Item>\r\n        \r\n              <Form.Item\r\n                wrapperCol={{\r\n                  offset: 0,\r\n                  span: 24,\r\n                }}\r\n              >\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  export default withRouter(Insert);"]},"metadata":{},"sourceType":"module"}