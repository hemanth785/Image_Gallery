{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/heman/Documents/Z_Hemanth/Development/gallery_app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/heman/Documents/Z_Hemanth/Development/gallery_app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from\"react\";import'./Insert.css';import Header from\"./Header\";import{Form,Input,Button,message}from'antd';import{config}from\"./../App\";import{withRouter}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var TextArea=Input.TextArea;var Insert=function Insert(props){var onFinish=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values){var ImgName,ImgURL,ImgDetails,rawResponse,content;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:ImgName=values.ImgName,ImgURL=values.ImgURL,ImgDetails=values.ImgDetails;_context.next=3;return fetch(\"\".concat(config.endpoint,\"/images/new\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({ImgName:ImgName,ImgURL:ImgURL,ImgDetails:ImgDetails})});case 3:rawResponse=_context.sent;_context.next=6;return rawResponse.json();case 6:content=_context.sent;if(content.status=='success'){message.success(\"Successfully added new image to gallery\");setTimeout(function(){props.history.push('/');},1500);}else{message.success(\"Error in inserting new image, please try again!\");}case 8:case\"end\":return _context.stop();}}},_callee);}));return function onFinish(_x){return _ref.apply(this,arguments);};}();var onFinishFailed=function onFinishFailed(errorInfo){console.log('Failed:',errorInfo);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"form-header\",children:\"Add new Image\"}),/*#__PURE__*/_jsxs(Form,{name:\"basic\",labelCol:{span:6},wrapperCol:{span:18},initialValues:{remember:true},onFinish:onFinish,onFinishFailed:onFinishFailed,children:[/*#__PURE__*/_jsx(Form.Item,{label:\"Image name\",name:\"ImgName\",rules:[{required:true,message:'Please input image name!'}],children:/*#__PURE__*/_jsx(Input,{})}),/*#__PURE__*/_jsx(Form.Item,{label:\"Image URL\",name:\"ImgURL\",rules:[{required:true,message:'Please input image url!'}],children:/*#__PURE__*/_jsx(Input,{})}),/*#__PURE__*/_jsx(Form.Item,{label:\"Image Detail\",name:\"ImgDetails\",rules:[{required:true,message:'Please input image detail!'}],children:/*#__PURE__*/_jsx(TextArea,{row:4})}),/*#__PURE__*/_jsx(Form.Item,{wrapperCol:{offset:0,span:24},children:/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",children:\"Submit\"})})]})]})]});};export default withRouter(Insert);","map":{"version":3,"sources":["C:/Users/heman/Documents/Z_Hemanth/Development/gallery_app/frontend/src/components/Insert.js"],"names":["React","Header","Form","Input","Button","message","config","withRouter","TextArea","Insert","props","onFinish","values","ImgName","ImgURL","ImgDetails","fetch","endpoint","method","headers","body","JSON","stringify","rawResponse","json","content","status","success","setTimeout","history","push","onFinishFailed","errorInfo","console","log","span","remember","required","offset"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport './Insert.css';\r\nimport Header from \"./Header\";\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { config } from \"./../App\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst { TextArea } = Input;\r\n  \r\nconst Insert = (props) => {\r\n    const onFinish = async (values) => {\r\n      const {ImgName,ImgURL,ImgDetails} =values;\r\n      const rawResponse = await fetch(`${config.endpoint}/images/new`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          ImgName,\r\n          ImgURL,\r\n          ImgDetails\r\n        })\r\n      });\r\n      const content = await rawResponse.json();\r\n      if(content.status == 'success'){\r\n        message.success(\"Successfully added new image to gallery\")\r\n        setTimeout(function(){\r\n          props.history.push('/')\r\n        },1500)\r\n      } else {\r\n        message.success(\"Error in inserting new image, please try again!\")\r\n      }\r\n    };\r\n  \r\n    const onFinishFailed = (errorInfo) => {\r\n      console.log('Failed:', errorInfo);\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <Header />\r\n        <div className='form-container'>\r\n          <h2 className='form-header'>Add new Image</h2>\r\n            <Form\r\n              name=\"basic\"\r\n              labelCol={{\r\n                span: 6,\r\n              }}\r\n              wrapperCol={{\r\n                span: 18,\r\n              }}\r\n              initialValues={{\r\n                remember: true,\r\n              }}\r\n              onFinish={onFinish}\r\n              onFinishFailed={onFinishFailed}\r\n            >\r\n\r\n              <Form.Item\r\n                label=\"Image name\"\r\n                name=\"ImgName\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input image name!',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n        \r\n              <Form.Item\r\n                label=\"Image URL\"\r\n                name=\"ImgURL\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input image url!',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Image Detail\"\r\n                name=\"ImgDetails\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input image detail!',\r\n                  },\r\n                ]}\r\n              >\r\n                <TextArea row={4} />\r\n              </Form.Item>\r\n        \r\n              <Form.Item\r\n                wrapperCol={{\r\n                  offset: 0,\r\n                  span: 24,\r\n                }}\r\n              >\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  export default withRouter(Insert);"]},"metadata":{},"sourceType":"module"}